% code for automatic RVE evaluation
dim = 20; % number of layers in RVE
mesh = 10; % mesh size in micrometers
num_RVEs = 5; % number of RVEs that csc code has generated
best_delta = 100000; % set to a high number, this will be replaced by the deviation of the best performing RVE
exp_d = 41.6804; % experimental average grain diameter based on EVSD analysis
exp_asp = 0.6796; % experimental average grain aspect ratio based on EVSD analysis

%% analyse each layer and save data in array

export_name = '\\home.org.aalto.fi\yadava4\data\Documents\MATLAB\mtex-5.9.0\mtex-5.9.0\AScI\Automatic_RVE\RVE_analysis_data.txt'; % this is where the RVE evaluation information is exported
fid = fopen(export_name, 'w');

fprintf(fid, 'RVE \t avg_size \t avg_shape \t delta_d \t delta_asp \t delta \n'); % these are the featues that the code will output and save to the exported file


% run outermost loop num_RVEs times
% this loop is used to find the average grain aspect ratio of the RVE,
% using .txt file
for i = 1:num_RVEs
    avg_shape_per_layer = []; % an array where the average of each layer is added

    for j = 1:dim % this runs for each layer, each layer is analysed separately
        % Specify Crystal and Specimen Symmetries

        % crystal symmetry
        CS = {... 
          'notIndexed',...
          crystalSymmetry('432', [1 1 1], 'mineral', 'Iron fcc', 'color', [0.53 0.81 0.98])};
        
        % plotting convention
        setMTEXpref('xAxisDirection','north');
        setMTEXpref('zAxisDirection','outOfPlane');
    
        % Specify File Names
        % path to files
        pname = "\\home.org.aalto.fi\yadava4\data\Documents\MATLAB\mtex-5.9.0\mtex-5.9.0\AScI\Automatic_RVE\" + num2str(i) + "\layers\layer" + num2str(j) + "_RVE" + num2str(i) + ".txt";

        ebsd = EBSD.load(pname,CS,'interface','generic',...
      'ColumnNames', { 'phi1' 'Phi' 'phi2' 'x' 'y' 'FeatureID' 'Phase'}, 'Columns', [1 2 3 4 5 7 8], 'Bunge');

        ebsdcorri=ebsd('indexed');
        [grains,ebsdcorri.grainId,ebsdcorri.mis2mean] = calcGrains(ebsdcorri,'angle',15*degree);
        initialGrainNr = length(grains); % check number of initial grains after first reconstruction
    
        % delete the very small grains which might be caused by the measurement error
        ebsdcorri(grains(grains.grainSize < 2)) = []; % delete grains w only 1 or 2 measurement points
    
        % redo grain segmentation
        [grains, ebsdcorri.grainId] = calcGrains(ebsdcorri, 'angle', 15*degree); % set grain boundary as 15 deg
    
        % pick up the focused phase
        grainsIronfcc = grains('Iron fcc');
        totalGrainNr = length(grainsIronfcc); % check the number of tot grains of the focused phase

         % Find the boundary grains
        outerBoundary_id = any(grainsIronfcc.boundary.grainId==0, 2);
        grain_id = grainsIronfcc.boundary(outerBoundary_id).grainId;
        grain_id(grain_id==0) = [];

        grainsIronfcc(grain_id) = [];
        innerGrainNr = length(grainsIronfcc);

        [GrainfitEangle, GrainfitElongA, GrainfitEshortb] = fitEllipse(grainsIronfcc);

        %Extract grains data
        Grainarea = grainsIronfcc.area;
        GraineqR = grainsIronfcc.equivalentRadius;
        GraineqD = GraineqR*2; % equivalent diameter --> this is not accurate for RVE analysis, ignore this
        Grainasp = 1./grainsIronfcc.aspectRatio; %shape factor: aspect ratio
    
        avg_shape_per_layer = [avg_shape_per_layer, mean(Grainasp)]; % the array is updated after each layer is analysed


    end

    % grain size calculations done using .csv files, "Volumes" section

    source_filename = ['\\home.org.aalto.fi\yadava4\data\Documents\MATLAB\mtex-5.9.0\mtex-5.9.0\AScI\Automatic_RVE\' num2str(i)  '\postProc\steel.csv'] % find the .csv file for each RVE in the postProc folder

    grain_vol = csvread(source_filename, 2, 11); % read the "Volumes" column from .csv file, runs once per RVE
    
    grain_d = []; % store the grain diameters calculated from grain_vol here

    for index = 1:length(grain_vol)
        grain_radius = (grain_vol(index) * (3/(4*pi)))^(1/3); % use formula of a sphere to calculate radius from the given volume
    
        grain_d = [grain_d (2*grain_radius)]; % calculate grain diameter by multiplying grain radius by 2
    
    end 

    % get the average size and shape of the whole RVE
    avg_RVE_size = mean(grain_d) 
    avg_RVE_shape = mean(avg_shape_per_layer);

    % Evaluate the RVE by finding deviation from experimental data
    % error is the difference between RVE value and experimental value
    error_d = abs(avg_RVE_size - exp_d); % error for grain diameter
    error_asp = abs(avg_RVE_shape - exp_asp); % error for grain asp ratio

    % delta is the deviation formula 
    delta_d = (error_d/exp_d) * 100;
    delta_asp = (error_asp/exp_asp) * 100;

    % overall delta found by taking average of delta_d and delta_asp
    delta = (delta_d + delta_asp) / 2; 

    % find the best RVE by finding the smallest delta
    if best_delta > delta
        best_RVE = i
        best_delta = delta
    end

    % store relavent information about RVE in the text file
    fprintf(fid, ('%d \t %f \t %f \t %f \t %f \t %f \n'), i, avg_RVE_size, avg_RVE_shape, delta_d, delta_asp, delta); 


end

 fprintf(fid, ('RVE %d is the optimal RVE with deviation %f %'), best_RVE, delta)
